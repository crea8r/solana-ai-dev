{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
      "function_name": {
        "type": "string",
        "description": "The name of the function in snake_case format prefixed with 'run_'."
      },
      "context_struct": {
        "type": "string",
        "description": "The struct name for the context, e.g., InstructionNameContext."
      },
      "params_struct": {
        "type": "string",
        "description": "The struct name for the parameters, e.g., InstructionNameParams."
      },
      "accounts": {
        "type": "array",
        "description": "A list of accounts with attributes and types. If the account references a custom data structure, use 'Account<'info, StructName>'.",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Account name as a string."
            },
            "type": {
              "type": "string",
              "description": "Account type, e.g., 'Account<'info, StructName>', 'Signer<'info>', 'Program<'info>'."
            },
            "attributes": {
            "type": "array",
            "description": "A list of constraint attributes for the account. If the account is being initialized (using the 'init' constraint), additional attributes must be provided to ensure proper initialization. These include:\n- 'seeds': A list of seeds (e.g., [b\"seed\", signer.key().as_ref()]) used for deriving the account's public key.\n- 'bump': A bump seed value for PDA creation.\n- 'payer': The account responsible for covering rent (e.g., 'payer = signer').\n- 'space': The amount of space to allocate for the account (e.g., 'space = 100'). !Important: If the account is being initialized, do not put the 'mut' keyword in the same macro!",
            "items": {
              "type": "string",
              "description": "Each attribute is a constraint for the account. Examples include 'init', 'seeds', 'bump', 'payer', 'space', etc. For 'init', it is mandatory to provide additional constraints such as 'seeds', 'bump', 'payer', and 'space'."
            },
            "additionalProperties": false
          }
          },
          "required": ["name", "type", "attributes"],
          "additionalProperties": false
        }
      },
      "params_fields": {
        "type": "array",
        "description": "A list of parameter fields for the instruction.",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Parameter name as a string."
            },
            "type": {
              "type": "string",
              "description": "Parameter type, e.g., 'u64', 'String'."
            }
          },
          "required": ["name", "type"],
          "additionalProperties": false
        }
      },
      "error_codes": {
        "type": "array",
        "description": "A list of error codes for the instruction. !Important: ensure to add the Overflow variant to the error enum if required by the instruction logic.",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Error code name in PascalCase."
            },
            "msg": {
              "type": "string",
              "description": "A human-readable error message."
            }
          },
          "required": ["name", "msg"],
          "additionalProperties": false
        }
      },
      "function_logic": {
        "type": "string",
        "description": "The main function logic as a string. Ensure all error codes referenced here are defined in 'error_codes'. !Important: make sure to always return Ok(()) at the end of the function. Or if returning a type Ok(value)!"
      },
      "state_context": {
        "type": "string",
        "description": "The generated state.rs file content, used to provide context for instruction generation."
      },
      "accounts_structure": {
        "type": "array",
        "description": "Accounts structure for the state.rs file, linked with accounts to ensure consistency.",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The account name. This name should be referenced in the accounts section as a custom data structure."
            },
            "description": {
              "type": "string",
              "description": "A description of the account."
            },
            "data_structure": {
              "type": "object",
              "description": "The structure of the account as JSON, including fields and their types.",
              "properties": {
                "fields": {
                  "type": "array",
                  "description": "A list of fields in the account structure.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "Field name." },
                      "type": { "type": "string", "description": "Field type." }
                    },
                    "required": ["name", "type"],
                    "additionalProperties": false
                  }
                },
                "methods": {
                  "type": "array",
                  "description": "A list of methods or operations associated with the account.",
                  "items": { "type": "string" }
                }
              },
              "required": ["fields", "methods"],
              "additionalProperties": false
            }
          },
          "required": ["name", "description", "data_structure"],
          "additionalProperties": false
        }
      }
    },
    "required": [
      "function_name",
      "context_struct",
      "params_struct",
      "accounts",
      "params_fields",
      "error_codes",
      "function_logic",
      "state_context",
      "accounts_structure"
    ],
    "additionalProperties": false
  }
  