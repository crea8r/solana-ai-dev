import { FileTreeItemType } from '../../interfaces/file';
import { CodeFile } from '../../contexts/CodeFileContext';
import { Project, ProjectDetails } from '../../interfaces/project';

const stakingProgramProject: Project = {
  id: '',
  rootPath: '',
  name: 'Staking Program',
  description: 'A Solana program that allows users to stake tokens for rewards. Users can stake tokens, claim rewards, and withdraw staked tokens after a lock-up period.',
  aiModel: '',
  apiKey: '',
  walletPublicKey: '',
  details: {
    nodes: [
      {
        width: 56,
        height: 44,
        id: 'program-34567',
        type: 'program',
        position: { x: 50, y: 200 },
        data: {
          label: 'Staking Program',
          item: {
            id: 'program-34567',
            type: 'program',
            name: 'Staking Program',
            description: 'A program for staking tokens and earning rewards over time.',
          },
        },
        selected: false,
        positionAbsolute: { x: 50, y: 200 },
      },
      {
        width: 80,
        height: 44,
        id: 'account-34568',
        type: 'account',
        position: { x: 300, y: 50 }, // Top-right
        data: {
          label: 'StakedAccount',
          item: {
            id: 'account-34568',
            type: 'account',
            name: 'StakedAccount',
            description: 'Stores information about tokens staked by a user, including the staked amount and lock-up period.',
            json: '{user: PubKey, staked_amount: u64, lockup_period: i64, rewards: u64, stake_status: string}',
            ownerProgramId: 'program-34567',
          },
        },
        selected: false,
        positionAbsolute: { x: 300, y: 50 },
      },
      {
        width: 66,
        height: 44,
        id: 'instruction-34569',
        type: 'instruction',
        position: { x: 300, y: 150 }, // Second from top-right
        data: {
          label: 'StakeTokens',
          item: {
            id: 'instruction-34569',
            type: 'instruction',
            name: 'StakeTokens',
            description: 'Allows a user to stake tokens for a specific lock-up period.',
            parameters: 'staking_account: AccountInfo, amount: u64, lockup_period: i64',
            aiInstruction: 'Verify the amount being staked, ensure the lock-up period is valid, and store the staked amount along with the user details. Set the stake status to "active".',
            ownerProgramId: 'program-34567',
          },
        },
        selected: true,
        positionAbsolute: { x: 300, y: 150 },
      },
      {
        width: 66,
        height: 44,
        id: 'instruction-34570',
        type: 'instruction',
        position: { x: 300, y: 250 }, // Third from top-right
        data: {
          label: 'ClaimRewards',
          item: {
            id: 'instruction-34570',
            type: 'instruction',
            name: 'ClaimRewards',
            description: 'Allows a user to claim the rewards accumulated from staked tokens.',
            parameters: 'staking_account: AccountInfo, user: PubKey',
            aiInstruction: 'Check if the lock-up period has passed, calculate the rewards based on the staked amount and the lock-up duration, and transfer rewards to the user.',
            ownerProgramId: 'program-34567',
          },
        },
        selected: true,
        positionAbsolute: { x: 300, y: 250 },
      },
      {
        width: 66,
        height: 44,
        id: 'instruction-34571',
        type: 'instruction',
        position: { x: 300, y: 350 }, // Bottom-right
        data: {
          label: 'WithdrawStakedTokens',
          item: {
            id: 'instruction-34571',
            type: 'instruction',
            name: 'WithdrawStakedTokens',
            description: 'Allows a user to withdraw the staked tokens after the lock-up period has expired.',
            parameters: 'staking_account: AccountInfo, user: PubKey',
            aiInstruction: 'Verify if the lock-up period has ended, check the staked amount, and transfer the staked tokens back to the user.',
            ownerProgramId: 'program-34567',
          },
        },
        selected: true,
        positionAbsolute: { x: 300, y: 350 },
      },
    ],
    edges: [
      {
        id: 'edge-1',
        source: 'program-34567',
        target: 'account-34568',
        type: 'solana',
        animated: false,
        style: { stroke: '#ff0072', cursor: 'pointer', strokeWidth: 2 },
      },
      {
        id: 'edge-2',
        source: 'program-34567',
        target: 'instruction-34569',
        type: 'solana',
        animated: false,
        style: { stroke: '#ff0072', cursor: 'pointer', strokeWidth: 2 },
      },
      {
        id: 'edge-3',
        source: 'program-34567',
        target: 'instruction-34570',
        type: 'solana',
        animated: false,
        style: { stroke: '#ff0072', cursor: 'pointer', strokeWidth: 2 },
      },
      {
        id: 'edge-4',
        source: 'program-34567',
        target: 'instruction-34571',
        type: 'solana',
        animated: false,
        style: { stroke: '#ff0072', cursor: 'pointer', strokeWidth: 2 },
      },
    ],
    files: { name: '', type: 'directory', children: [] },
    codes: [],
    docs: [],
    isSaved: false,
    isAnchorInit: false,
    isCode: false,
    aiFilePaths: [],
    aiStructure: '',
    stateContent: '',
    uiResults: [],
    aiInstructions: [],
    sdkFunctions: [],
    buildStatus: false,
    deployStatus: false,
    isSdk: false,
    isUi: false,
    genUiClicked: false,
    idl: { fileName: '', content: '', parsed: { instructions: [], accounts: [] } },
    sdk: { fileName: '', content: '' },
    walletPublicKey: '',
    walletSecretKey: '',
    programId: null,
    pdas: [],
  } as ProjectDetails,
};

export { stakingProgramProject };
